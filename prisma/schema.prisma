// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  id      Int       @id @default(autoincrement())
  type    String
  Profile Profile[]
  Staff   Staff[]
}

model Profile {
  id                        Int      @id @default(autoincrement())
  first_name                String
  last_name                 String
  phone_number              String
  password                  String
  email                     String   @unique
  role_id                   Int
  role                      Roles    @relation(fields: [role_id], references: [id])
  is_active                 Boolean
  confirmation_access_token String   @unique
  created_at                DateTime @default(now())
  updated_at                DateTime @updatedAt
}

model Staff {
  id                        Int     @id @default(autoincrement())
  first_name                String
  last_name                 String
  phone_number              String
  password                  String
  email                     String  @unique
  role_id                   Int
  role                      Roles   @relation(fields: [role_id], references: [id])
  profile_id                Int
  confirmation_access_token String  @unique
  is_active                 Boolean
  is_create_action          Boolean @default(false)
  is_read_action            Boolean @default(false)
  is_update_action          Boolean @default(false)
  is_delete_action          Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Brands {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  profile_id  Int
  is_delete   Boolean      @default(false)
  Categories  Categories[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Categories {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  profile_id  Int
  brand_id    Int
  brand       Brands  @relation(fields: [brand_id], references: [id])
  is_delete   Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Warehouses {
  id           Int     @id @default(autoincrement())
  name         String
  address      String
  phone_number String
  email        String  @unique
  profile_id   Int
  is_delete    Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
